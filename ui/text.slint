import { LineEdit } from "std-widgets.slint";
import { HoverableComponent } from "components.slint";

export enum FieldContentType { editable, interactable, viewable }

export component Title inherits Text {
    color: #01a7e1;
    font-family: "Archivo Black";
    font-size: 15px;
}

export component PrettyButton inherits HoverableComponent {
    in property <image> icon;
    in property <string> text;

    width: 125px;
    height: 30px;

    border-radius: 5px;

    Image {
        x: 10px;
        width: 24px;
        height: 24px;
        colorize: #000000;
        source: icon;
    }

    Text {
        x: 35px;
        text: text;
        font-family: "Archivo Black";
        font-size: 15px;
    }
}

export component EditableField inherits Rectangle {
    callback clicked();

    in property <string> title;
    in-out property <string> content;
    in property <FieldContentType> content-type;
    in property <image> icon;

    width: 400px;
    height: 65px;

    Title {
        x: 0px;
        y: 0px;
        text: title;
    }

    Rectangle {
        width: 400px;
        height: 25px;
        border-radius: 5px;
        background: #000000;

        LineEdit {
            x: 5px;
            height: 20px;
            width: root.content-type != FieldContentType.viewable && root.icon.width != 0 ? 360px : 390px;
            enabled: root.content-type != FieldContentType.viewable;
            read-only: root.content-type == FieldContentType.interactable;
            text <=> content;
            accepted(string) => {
                if root.content-type == FieldContentType.editable {
                    root.clicked();
                }
            }
        }

        Image {
            x: 370px;
            width: 24px;
            height: 24px;
            colorize: #ffffff;
            source: root.icon;

            if root.content-type == FieldContentType.interactable || root.content-type == FieldContentType.editable: TouchArea {
                clicked => {
                    root.clicked();
                }
            }
        }
    }
}
